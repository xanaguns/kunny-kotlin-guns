apply plugin: 'com.android.application'

// 코틀린 안드로이드 플러그인을 적용합니다.
apply plugin: 'kotlin-android'

// 코틀린 안드로이드 익스텐션 플러그인을 적용합니다.
apply plugin: 'kotlin-android-extensions'

// 코틀린 코드에서 어노테이션 프로세싱을 사용할 수 있도록 kotlin-kapt 플러그인을 추가로 적용합니다.
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.androidhuman.example.simplegithub"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "GITHUB_CLIENT_ID",
                project.properties["GITHUB_CLIENT_ID"] ?: "\"NOT_FOUND\""

        buildConfigField "String", "GITHUB_CLIENT_SECRET",
                project.properties["GITHUB_CLIENT_SECRET"] ?: "\"NOT_FOUND\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // 코틀린 코드를 저장할 폴더를 소스 디렉토리로 등록합니다.
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    //[ By lifecycle  안드로이드 아키텍처 컴포넌트를 위한 의존성을 추가합니다.
    implementation "android.arch.lifecycle:extensions:$archComponentVersion"
    //]
    //[ By room
    // 룸 라이브러리를 추가합니다.
    implementation "android.arch.persistence.room:runtime:$archComponentVersion"
    // 룸 라이브러리 RxJava 플러그인을 추가합니다.
    implementation "android.arch.persistence.room:rxjava2:$archComponentVersion"
    //]
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:customtabs:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"
    //[ By RxJava-rxBinding  서포트 라이브러리의 SearchView를 위한 바인딩을 제공하는 RxBinding 라이브러리를 추가합니다.
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:$rxBindingVersion"
    //]
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    //[ By RxJava  Retrofit에서 받은 응답을 옵서버블로 변환해주는 라이브러리를 추가합니다.
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    //]
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    //[ By RxJava  RxAndroid와 RxJava 라이브러리를 추가합니다.
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    //]
    implementation "org.jetbrains.anko:anko-commons:$ankoVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    //[ By lifecycle  안드로이드 아키텍처 컴포넌트를 위한 의존성을 추가합니다.
    kapt "android.arch.lifecycle:compiler:$archComponentVersion"
    //]
    //[ By room  룸 라이브러리용 어노테이션 프로세서를 추가합니다.
    kapt "android.arch.persistence.room:compiler:$archComponentVersion"
    //]
    // 코틀린 어노테이션 프로세서에서 처리될 수 있도록 의존성에 추가합니다.
    //annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
}
